package com.mhh.cloud.kafka.producer;

import java.util.*;

import kafka.javaapi.producer.Producer;
import kafka.producer.KeyedMessage;
import kafka.producer.ProducerConfig;

public class TestProducer {
	public static void main(String[] args)
	{
		long events = 100;
		Random rnd = new Random();
		Properties props = new Properties();
		
		props.put("metadata.broker.list", "localhost:9092");
		props.put("serializer.class", "kafka.serializer.StringEncoder");
		props.put("partitioner.class", "com.mhh.cloud.kafka.TestPartitioner");
		props.put("request.required.acks","1");
		
		ProducerConfig config = new ProducerConfig(props);
		Producer<String, String> producer = new Producer<String, String>(config);
		
		for(long nEvents = 0; nEvents < events; nEvents++)
		{
			long runtime = new Date().getTime();
			String ip = "192.168.253." + rnd.nextInt(255);
			String msg = runtime + ",test example" +ip;
			KeyedMessage<String, String> data = new KeyedMessage<String, String>("mhh_page_visits", ip, msg);
			producer.send(data);
		}
		producer.close();
	}

}
